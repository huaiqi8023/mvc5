<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

<# CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);
string inputFile = @"..\\Devin.Models\\Model1.edmx";
	
EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>

using Devin.Models;
using Devin.IDataAccess.IBaseDataAccess;

namespace Devin.IDataAccess
{
public interface IDbSession{
		//这里需要一个foreach循环来遍历数据库中所有的表放置在下面即可，这样就实现了所有表对应的仓储显示出来

	<# foreach(EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e=>e.Name)){#>
		/// <summary>
        /// 每个表对应的实体仓储对象
        /// </summary>
    I<#= entity.Name #>Repository <#= entity.Name #>Repository{get;}

	<#}#>


		/// <summary>
        /// 将当前应用程序跟数据库的会话内所有实体的变化更新回数据库
        /// </summary>
        /// <returns>保存成功就返回大于0，失败返回等于0</returns>
        int SaveChanges();

        /// <summary>
        /// 执行一个sql脚本的方法
        /// </summary>
        /// <param name="strSql">sql语句</param>
        /// <param name="parameters">参数</param>
        /// <returns>保存成功就返回大于0，失败返回等于0</returns>
        int ExcuteSql(string strSql, System.Data.Common.DbParameter[] parameters);
 }
}
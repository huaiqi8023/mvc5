<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="EF.Utility.CS.ttinclude"#>  //引进TT模板的命名空间
<#@ output extension=".cs" #>
<# CodeGenerationTools code = new CodeGenerationTools(this);

MetadataLoader loader = new MetadataLoader(this);

CodeRegion region = new CodeRegion(this, 1);

MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\..\\..\\..\\KD\\Mvc5\\Devin.Models\\Model1.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);

string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Devin.IDataAccess;
using Devin.Models;
using Devin.IDataAccess.IBaseRepository;
using System.Data;
using System.Linq.Expressions;
using Devin.DataAccess.BaseDataAccess;
namespace Devin.DataAccess
{
    //一次跟数据库交互的会话
    //public partial class DbSession  //代表应用程序跟数据库之间的一次会话，也是数据库访问层的统一入口
    //{
		//从这里需要一个for循环来遍历数据库中所有的表放置在下面即可，这样就实现了所有表的对应的仓储显示出来

	<#	foreach(EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e=>e.Name)){	 #>
	
		public partial class <#=entity.Name#>Repository:BaseRepository<<#=entity.Name#>>,I<#=entity.Name#>Repository
		{
		get{return new <#=entity.Name#>Repository();}
		}

	<#	}	#>
	//}
}
